from enum import Enum
from typing import List, Union

from olmo_eval import list_tasks

tasks = [
    "piqa",
    "hellaswag",
    "winogrande",
    "openbook_qa",
    "boolq",
    "sciq",
    "arc_easy",
    "arc_easy_ppl",
    "arc_challenge",
    "basic_arithmetic",
    "copa",
    "rte",
    "commitment_bank",
    # "mrpc",
    # "sst2",
    "commonsense_qa",
    "social_iqa",
    "trivia_qa_wiki_ppl",
    "natural_qs_open_ppl",
    "mmlu_stem_test",
    "mmlu_humanities_test",
    "mmlu_social_sciences_test",
    "mmlu_other_test",
    "mmlu_stem",
    "mmlu_humanities",
    "mmlu_social_sciences",
    "mmlu_other",
    "mmlu_stem_bpb",
    "mmlu_humanities_bpb",
    "mmlu_social_sciences_bpb",
    "mmlu_other_bpb",
    "mmlu_stem_var",
    "mmlu_humanities_var",
    "mmlu_social_sciences_var",
    "mmlu_other_var",
    "mmlu_stem_mc_5shot",
    "mmlu_humanities_mc_5shot",
    "mmlu_social_sciences_mc_5shot",
    "mmlu_other_mc_5shot",
    "mmlu_stem_mc_5shot_test",
    "mmlu_humanities_mc_5shot_test",
    "mmlu_social_sciences_mc_5shot_test",
    "mmlu_other_mc_5shot_test",
    "arc_challenge_mc_5shot",
    "arc_challenge_rc_0shot",
    "arc_challenge_rc_5shot",
    "arc_easy_mc_5shot",
    "arc_easy_rc_0shot",
    "arc_easy_rc_5shot",
    "boolq_mc_5shot",
    "boolq_rc_0shot",
    "boolq_rc_5shot",
    "copa_rc_0shot",
    "copycolors_10way",
    "copycolors_xl_10way",
    "csqa_mc_5shot",
    "csqa_rc_0shot",
    "csqa_rc_5shot",
    "hellaswag_mc_5shot",
    "hellaswag_rc_0shot",
    "hellaswag_rc_5shot",
    "openbookqa_mc_5shot",
    "openbookqa_rc_0shot",
    "openbookqa_rc_5shot",
    "piqa_mc_5shot",
    "piqa_rc_0shot",
    "piqa_rc_5shot",
    "sciq_rc_0shot",
    "socialiqa_mc_5shot",
    "socialiqa_rc_0shot",
    "socialiqa_rc_5shot",
    "winogrande_mc_5shot",
    "winogrande_rc_0shot",
    "winogrande_rc_5shot",
    "mmlu_stem_var_bpb",
    "mmlu_humanities_var_bpb",
    "mmlu_social_sciences_var_bpb",
    "mmlu_other_var_bpb",
    "arc_challenge_mc_5shot_bpb",
    "arc_challenge_rc_0shot_bpb",
    "arc_challenge_rc_5shot_bpb",
    "arc_easy_mc_5shot_bpb",
    "arc_easy_rc_0shot_bpb",
    "arc_easy_rc_5shot_bpb",
    "boolq_mc_5shot_bpb",
    "boolq_rc_0shot_bpb",
    "boolq_rc_5shot_bpb",
    "copa_rc_0shot_bpb",
    "copycolors_10way_bpb",
    "copycolors_xl_10way_bpb",
    "csqa_mc_5shot_bpb",
    "csqa_rc_0shot_bpb",
    "csqa_rc_5shot_bpb",
    "hellaswag_mc_5shot_bpb",
    "hellaswag_rc_0shot_bpb",
    "hellaswag_rc_5shot_bpb",
    "openbookqa_mc_5shot_bpb",
    "openbookqa_rc_0shot_bpb",
    "openbookqa_rc_5shot_bpb",
    "piqa_mc_5shot_bpb",
    "piqa_rc_0shot_bpb",
    "piqa_rc_5shot_bpb",
    "sciq_rc_0shot_bpb",
    "socialiqa_mc_5shot_bpb",
    "socialiqa_rc_0shot_bpb",
    "socialiqa_rc_5shot_bpb",
    "winogrande_mc_5shot_bpb",
    "winogrande_rc_0shot_bpb",
    "winogrande_rc_5shot_bpb",
    "arc_challenge_val_rc_5shot",
    "arc_challenge_val_mc_5shot",
    "arc_challenge_test_rc_5shot",
    "arc_challenge_test_mc_5shot",
    "arc_easy_val_rc_5shot",
    "arc_easy_val_mc_5shot",
    "arc_easy_test_rc_5shot",
    "arc_easy_test_mc_5shot",
    "boolq_val_rc_5shot",
    "boolq_val_mc_5shot",
    "csqa_val_rc_5shot",
    "csqa_val_mc_5shot",
    "hellaswag_val_rc_5shot",
    "hellaswag_val_mc_5shot",
    "openbookqa_val_rc_5shot",
    "openbookqa_val_mc_5shot",
    "openbookqa_test_rc_5shot",
    "openbookqa_test_mc_5shot",
    "piqa_val_rc_5shot",
    "piqa_val_mc_5shot",
    "socialiqa_val_rc_5shot",
    "socialiqa_val_mc_5shot",
    "winogrande_val_rc_5shot",
    "winogrande_val_mc_5shot",
    "mmlu_stem_val_rc_var",
    "mmlu_stem_val_rc_5shot",
    "mmlu_stem_val_mc_5shot",
    "mmlu_stem_test_rc_var",
    "mmlu_stem_test_rc_5shot",
    "mmlu_stem_test_mc_5shot",
    "mmlu_humanities_val_rc_var",
    "mmlu_humanities_val_rc_5shot",
    "mmlu_humanities_val_mc_5shot",
    "mmlu_humanities_test_rc_var",
    "mmlu_humanities_test_rc_5shot",
    "mmlu_humanities_test_mc_5shot",
    "mmlu_social_sciences_val_rc_var",
    "mmlu_social_sciences_val_rc_5shot",
    "mmlu_social_sciences_val_mc_5shot",
    "mmlu_social_sciences_test_rc_var",
    "mmlu_social_sciences_test_rc_5shot",
    "mmlu_social_sciences_test_mc_5shot",
    "mmlu_other_val_rc_var",
    "mmlu_other_val_rc_5shot",
    "mmlu_other_val_mc_5shot",
    "mmlu_other_test_rc_var",
    "mmlu_other_test_rc_5shot",
    "mmlu_other_test_mc_5shot",
    "gsm8k_gold_bpb_5shot",
    "codex_humaneval_gold_bpb_0shot",
    "codex_mbpp_gold_bpb_0shot",
    "minerva_math_algebra_gold_bpb_0shot",
    "minerva_math_counting_and_probability_gold_bpb_0shot",
    "minerva_math_geometry_gold_bpb_0shot",
    "minerva_math_intermediate_algebra_gold_bpb_0shot",
    "minerva_math_number_theory_gold_bpb_0shot",
    "minerva_math_prealgebra_gold_bpb_0shot",
    "minerva_math_precalculus_gold_bpb_0shot",
]


DownstreamEvaluator = Enum("DownstreamEvaluator", {name.upper(): name for name in tasks + ["all"]}, type=str)


def get_all_tasks() -> List[str]:
    """Return all downstream evaluation tasks"""
    return [task.value for task in DownstreamEvaluator if task != DownstreamEvaluator.ALL]  # type: ignore
